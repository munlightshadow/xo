{
  "name": "roomdata",
  "version": "1.1.5",
  "description": "Ability to create room variables for people that use socket.io",
  "main": "roomdata.js",
  "scripts": {
    "test": "mocha",
    "cover": "istanbul cover ./node_modules/mocha/bin/_mocha -- -R spec ./test/*",
    "coveralls": "npm bin /istanbul cover ./node_modules/mocha/bin/_mocha -- -R spec ./test/* && node node_modules/coveralls/bin/coveralls.js < coverage/lcov.info"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:michaeldegroot/roomdata.git"
  },
  "keywords": [
    "socket.io",
    "room",
    "variable",
    "room variables",
    "room variable",
    "room data",
    "roomdata"
  ],
  "author": {
    "name": "Michael de Groot",
    "email": "specamps@gmail.com"
  },
  "license": "MIT",
  "devDependencies": {
    "assert": "^1.3.0",
    "socket.io": "^1.3.7",
    "socket.io-client": "^1.3.7",
    "assert-plus": "^0.2.0",
    "coveralls": "^2.11.4",
    "express": "^4.13.3",
    "istanbul": "^0.4.1",
    "mocha": "^2.3.4",
    "mocha-lcov-reporter": "^1.0.0",
    "request": "^2.67.0"
  },
  "readme": "[![](https://nodei.co/npm/roomdata.png?downloads=true&downloadRank=true&stars=true)](https://www.npmjs.com/package/roomdata)  \r\n[![](https://david-dm.org/michaeldegroot/roomdata.svg \"deps\") ](https://david-dm.org/michaeldegroot/roomdata \"david-dm\")\r\n[![](https://travis-ci.org/michaeldegroot/roomdata.svg?branch=master \"testing\") ](https://travis-ci.org/michaeldegroot/roomdata \"travis-ci\")\r\n[![](https://coveralls.io/repos/michaeldegroot/roomdata/badge.svg?branch=master&service=github)](https://coveralls.io/github/michaeldegroot/roomdata?branch=master)\r\n![](https://img.shields.io/badge/Node-%3E%3D0.10-green.svg)\r\n![](https://img.shields.io/npm/dt/roomdata.svg)\r\n![](https://img.shields.io/npm/l/roomdata.svg)\r\n\r\n___\r\n# What it does\r\nAbility to create room variables for [socket.io](https://www.npmjs.com/package/socket.io).  \r\nIt was kind of strange to see that there was no room variable solution out of the box.\r\n\r\n[You can find a demo on how it looks here](https://bitbucket.org/repo/EaxM4K/images/4033599328-roomdata.gif)\r\n___\r\n# Changelog\r\n[https://github.com/michaeldegroot/roomdata/commits/master](https://github.com/michaeldegroot/roomdata/commits/master)\r\n\r\n___\r\n#  Getting Started\r\n\r\n##### 1. Start by installing the package:\r\n\r\n    npm install roomdata\r\n\r\n##### 2. Do awesome stuff\r\n````js\r\nvar roomdata = require('roomdata');\r\n\r\n// When you want a user to join a room\r\nroomdata.joinRoom(socket, \"testroom\"); // You will have to replace your socket.join with this line\r\n\r\n// Creates a room variable called 'gamedata'\r\nroomdata.set(socket, \"gamedata\", {x:4, y:20});\r\n\r\n// Gets the room variable called 'gamedata'\r\nconsole.log(roomdata.get(socket, \"gamedata\"));      // Prints: { x: 4, y: 20 }\r\nconsole.log(roomdata.get(socket, \"gamedata\").y);    // Prints: 20\r\n\r\n// When you want a user to leave a room\r\nroomdata.leaveRoom(socket); // you will have to replace your socket.leave with this line\r\n````\r\n___\r\n## API\r\n\r\n###  .joinRoom(socket, roomid)\r\n```js\r\nsocket:     Object      // The user socket variable\r\nroomid:     String      // Chosen room name\r\n```\r\n_Joines a room_  \r\n__IMPORTANT__: _You have to use roomdata.joinRoom instead of socket.join or the module will __FAIL___\r\n\r\n__Example__\r\n\r\n````js\r\nio.sockets.on('connection', function (socket) {\r\n    roomdata.joinRoom(socket, \"testroom\"); // You do not have to create a room before joining it\r\n});\r\n````\r\n___\r\n###  .leaveRoom(socket)\r\n```js\r\nsocket:     Object      // The user socket variable\r\n```\r\n_Leaves a room_  \r\n__IMPORTANT__: _You have to use roomdata.leaveRoom instead of socket.leave or the module will __FAIL___\r\n\r\n__Example__\r\n\r\n````js\r\nio.sockets.on('connection', function (socket) {\r\n    socket.on('disconnect', function() {\r\n    \t\troomdata.leaveRoom(socket);\r\n\t});\r\n});\r\n````\r\n___\r\n###  .set(socket, name, value)\r\n```js\r\nsocket:     Object      // The user socket variable\r\nname:       String      // The name for the variable you want to set\r\nvalue:      Value       // The variable you want to set\r\n```\r\n\r\n_Sets a room variable_\r\n\r\n__Example__\r\n\r\n````js\r\nio.sockets.on('connection', function (socket) {\r\n\troomdata.set(socket, \"gamedata\", {x:4, y:20}); // Creates a room variable called 'gamedata'\r\n\troomdata.set(socket, \"timesdied\", 5); // Can also be a number, string, boolean, object etc\r\n});\r\n````\r\n___\r\n###  .get(socket, name)\r\n```js\r\nsocket:     Object      // The user socket variable\r\nname:       String      // The name for the variable you want to get\r\n```\r\n\r\n_Gets a room variable_\r\n\r\n__Example__\r\n\r\n````js\r\nio.sockets.on('connection', function (socket) {\r\n\tconsole.log(roomdata.get(socket, \"gamedata\")); // Prints: { x: 4, y: 20 }\r\n\tconsole.log(roomdata.get(socket, \"gamedata\").y); // Prints: 20\r\n});\r\n````\r\n\r\n\r\n\r\n___\r\n# Contact\r\n\r\nYou can contact me at specamps@gmail.com",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/michaeldegroot/roomdata/issues"
  },
  "_id": "roomdata@1.1.5",
  "dist": {
    "shasum": "dfca4b78beccad3ad0e885f2b655ee7dbd290ba8"
  },
  "_from": "roomdata@*",
  "_resolved": "https://registry.npmjs.org/roomdata/-/roomdata-1.1.5.tgz"
}
